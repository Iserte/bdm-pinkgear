{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","kzarka","dandelion","nouver","redNose","giath","bheg","muskan","fragments","setFragments","missing","setMissing","price","setPrice","weapons","armors","totalPrice","setTotalPrice","useEffect","fragmentsStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleChange","e","target","name","value","includes","className","colSpan","style","background","onChange","min","max","type","id","thousandSeparator","displayType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e14937f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport NumberFormat from 'react-number-format';\nimport './App.css';\n\ninterface Fragments {\n  kzarka: number;\n  dandelion: number;\n  nouver: number;\n  redNose: number;\n  giath: number;\n  bheg: number;\n  muskan: number;\n}\n\ninterface TotalPrice {\n  weapons: number;\n  armors: number;\n}\n\nfunction App() {\n  const [fragments, setFragments] = useState<Fragments>({\n    kzarka: 0,\n    dandelion: 0,\n    nouver: 0,\n    redNose: 0,\n    giath: 0,\n    bheg: 0,\n    muskan: 0\n  });\n  const [missing, setMissing] = useState<Fragments>({\n    kzarka: 0,\n    dandelion: 0,\n    nouver: 0,\n    redNose: 0,\n    giath: 0,\n    bheg: 0,\n    muskan: 0\n  });\n  const [price, setPrice] = useState<Fragments>({\n    kzarka: 0,\n    dandelion: 0,\n    nouver: 0,\n    redNose: 0,\n    giath: 0,\n    bheg: 0,\n    muskan: 0\n  });\n  const [totalPrice, setTotalPrice] = useState<TotalPrice>({\n    weapons: 0,\n    armors: 0\n  })\n\n  useEffect(() => {\n    const fragmentsStorage = localStorage.getItem(\"fragments\");\n    if (!fragmentsStorage) return;\n    return setFragments(JSON.parse(fragmentsStorage));\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"fragments\", JSON.stringify(fragments));\n    setMissing({\n      kzarka: 900 - fragments.kzarka,\n      dandelion: 900 - fragments.dandelion,\n      nouver: 900 - fragments.nouver,\n      redNose: 240 - fragments.redNose,\n      giath: 240 - fragments.giath,\n      bheg: 240 - fragments.bheg,\n      muskan: 240 - fragments.muskan\n    })\n  },[fragments])\n\n  useEffect(() => {\n    setPrice({\n      kzarka: missing.kzarka * 920,\n      dandelion: missing.dandelion * 920,\n      nouver: missing.nouver * 920,\n      redNose: missing.redNose * 1360,\n      giath: missing.giath * 1200,\n      bheg: missing.bheg * 1040,\n      muskan: missing.muskan * 1040\n    })\n  },[missing])\n\n  useEffect(() => {\n    setTotalPrice({\n      weapons: price.kzarka + price.dandelion + price.nouver,\n      armors: price.redNose + price.giath + price.bheg + price.muskan\n    })\n  },[price])\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let {name, value} = e.target\n\n    if (\n      ['kzarka', 'dandelion', 'nouver']\n        .includes(name)\n        && value as unknown as number > 900\n      ) value = '900';\n\n    if (\n      ['redNose', 'giath', 'bheg', 'muskan']\n        .includes(name) \n      && value as unknown as number > 240\n    ) value = '240';\n\n    if (\n      ['kzarka', 'dandelion', 'nouver', 'redNose', 'giath', 'bheg', 'muskan']\n        .includes(name) \n      && value as unknown as number < 0\n    ) value = '0';\n    \n    setFragments({\n      ...fragments,\n      [name]: value\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      {/* WEAPONS */}\n      <table>\n        <tr>\n          <th className=\"center\" colSpan={4}>Weapons</th>\n        </tr>\n        <tr>\n          <th>Name</th>\n          <td>Kzarka</td>\n          <td>Dandelion</td>\n          <td>Nouver</td>\n        </tr>\n        <tr>\n          <th>Required</th>\n          <td>900</td>\n          <td>900</td>\n          <td>900</td>\n        </tr>\n        <tr style={{background: \"#88CC88\"}}>\n          <th>Owned</th>\n          <td><input onChange={handleChange} value={fragments.kzarka} min=\"0\" max=\"900\" type=\"number\" name=\"kzarka\" id=\"kzarka\"/></td>\n          <td><input onChange={handleChange} value={fragments.dandelion} min=\"0\" max=\"900\" type=\"number\" name=\"dandelion\" id=\"dandelion\"/></td>\n          <td><input onChange={handleChange} value={fragments.nouver} min=\"0\" max=\"900\" type=\"number\" name=\"nouver\" id=\"nouver\"/></td>\n        </tr>\n        <tr>\n          <th>Missing</th>\n          <td>{missing.kzarka}</td>\n          <td>{missing.dandelion}</td>\n          <td>{missing.nouver}</td>\n        </tr>\n        <tr>\n          <th>Price</th>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.kzarka} /></td>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.dandelion} /></td>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.nouver} /></td>\n        </tr>\n        <tr>\n          <th>Total Price</th>\n          <th className=\"center\" colSpan={3}><NumberFormat thousandSeparator={true} displayType=\"text\" value={totalPrice.weapons} /></th>\n        </tr>\n      </table>\n\n      {/* ARMORS */}\n      <table>\n        <tr>\n          <th className=\"center\" colSpan={5}>Armors</th>\n        </tr>\n        <tr>\n          <th>Name</th>\n          <td>Red Nose</td>\n          <td>Giath</td>\n          <td>Bheg</td>\n          <td>Muskan</td>\n        </tr>\n        <tr>\n          <th>Required</th>\n          <td>240</td>\n          <td>240</td>\n          <td>240</td>\n          <td>240</td>\n        </tr>\n        <tr style={{background: \"#88CC88\"}}>\n          <th>Owned</th>\n          <td><input onChange={handleChange} value={fragments.redNose} min=\"0\" max=\"240\" type=\"number\" name=\"redNose\" id=\"redNose\"/></td>\n          <td><input onChange={handleChange} value={fragments.giath} min=\"0\" max=\"240\" type=\"number\" name=\"giath\" id=\"giath\"/></td>\n          <td><input onChange={handleChange} value={fragments.bheg} min=\"0\" max=\"240\" type=\"number\" name=\"bheg\" id=\"bheg\"/></td>\n          <td><input onChange={handleChange} value={fragments.muskan} min=\"0\" max=\"240\" type=\"number\" name=\"muskan\" id=\"muskan\"/></td>\n        </tr>\n        <tr>\n          <th>Missing</th>\n          <td>{missing.redNose}</td>\n          <td>{missing.giath}</td>\n          <td>{missing.bheg}</td>\n          <td>{missing.muskan}</td>\n        </tr>\n        <tr>\n          <th>Price</th>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.redNose} /></td>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.giath} /></td>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.bheg} /></td>\n          <td><NumberFormat thousandSeparator={true} displayType=\"text\" value={price.muskan} /></td>\n        </tr>\n        <tr>\n          <th>Total Price</th>\n          <th className=\"center\" colSpan={4}><NumberFormat thousandSeparator={true} displayType=\"text\" value={totalPrice.armors} /></th>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}